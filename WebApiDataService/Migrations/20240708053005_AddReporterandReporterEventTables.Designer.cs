// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiDataService.DataLayer.Weather;


#nullable disable

namespace WebApiExploration.Migrations
{
    [DbContext(typeof(WeatherDbContext))]
    [Migration("20240708053005_AddReporterandReporterEventTables")]
    partial class AddReporterandReporterEventTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApiExploration.DataLayer.Models.ForecastReporterEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ForecastId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("ReportedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ReporterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ForecastId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ReporterId");

                    b.ToTable("ReportedEvents");
                });

            modelBuilder.Entity("WebApiExploration.DataLayer.Models.Reporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Reporters");
                });

            modelBuilder.Entity("WebApiExploration.DataLayer.Models.WeatherForecast", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.Property<int>("TemperatureF")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Date", "Summary");

                    b.ToTable("Forecasts");
                });

            modelBuilder.Entity("WebApiExploration.DataLayer.Models.ForecastReporterEvent", b =>
                {
                    b.HasOne("WebApiExploration.DataLayer.Models.WeatherForecast", "Forecast")
                        .WithMany()
                        .HasForeignKey("ForecastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiExploration.DataLayer.Models.Reporter", "Reporter")
                        .WithMany()
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forecast");

                    b.Navigation("Reporter");
                });
#pragma warning restore 612, 618
        }
    }
}
